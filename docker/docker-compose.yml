services:

  jupyter:
    image: jupyter/base-notebook:latest  
    container_name: jupyter
    ports: 
    - "8888:8888"
    volumes:
      - ./notebooks:/home/jovyan/work     
      - ./data:/data                        
      - ./requirements.txt:/tmp/requirements.txt
    command: >
      bash -c "start-notebook.sh"
    environment:
      - JUPYTER_ENABLE_LAB=yes
    restart: always

  minio:
    image: minio/minio:latest 
    container_name: minio
    ports:
      - "9000:9000"                      
      - "9001:9001"                      
    volumes:
      - ./minio-data:/data              
    environment:
      - MINIO_ROOT_USER=$MINIO_ACCESS_KEY
      - MINIO_ROOT_PASSWORD=$MINIO_SECRET_ACCESS_KEY
      - MINIO_STORAGE_USE_HTTPS=false
    command: server /data --console-address ":9001"
    restart: always

  minio-setup:
    image: quay.io/minio/mc
    depends_on:
      - minio
    volumes:
      - ./minio/create-bucket.sh:/create-bucket.sh
    entrypoint: /bin/sh
    command: -c "chmod +x /create-bucket.sh && /create-bucket.sh"
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_ACCESS_KEY}

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.20.2          # MLFlow tracking server
    ports:
      - "5000:5000"                      # Expose MLFlow on localhost:5000
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
    volumes:
      - ./mlflow-data/mlruns:/mlflow/mlruns  # Store experiment metadata and logs
    command: >
      mlflow server \
        --backend-store-uri /mlflow/mlruns \
        --default-artifact-root s3://mlflow/ \
        --host 0.0.0.0
    depends_on:
      - minio
      - minio-setup

volumes:
  volumes:
  minio-data:
  mlruns:
  notebooks:
  data: